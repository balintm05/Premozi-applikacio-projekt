server

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["ReactApp1.Server/ReactApp1.Server.csproj", "ReactApp1.Server/"]
RUN dotnet restore "ReactApp1.Server/ReactApp1.Server.csproj"

COPY . .
WORKDIR "/src/ReactApp1.Server"
RUN dotnet build "ReactApp1.Server.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "ReactApp1.Server.csproj" -c Release -o /app/publish

FROM mcr.microsoft.com/dotnet/aspnet:8.0
WORKDIR /app
COPY --from=publish /app/publish .
ENV ASPNETCORE_URLS=http://+:7156
EXPOSE 7156
ENTRYPOINT ["dotnet", "ReactApp1.Server.dll"]



client

FROM node:18-alpine AS development
WORKDIR /app
COPY ReactApp1.Client/package.json ReactApp1.Client/package-lock.json ./
RUN npm install
COPY ReactApp1.Client/ .
ENV VITE_API_BASE_URL=http://localhost:7156
EXPOSE 60769
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "60769"]



compose 

version: '3.8'

services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE: premozi
      MYSQL_USER: root
      MYSQL_PASSWORD:
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  reactapp1.server:
    build:
      context: .
      dockerfile: ReactApp1.Server/Dockerfile
    ports:
      - "7156:7156"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=appdb;User=appuser;Password=apppassword;
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  reactapp1.client:
    build:
      context: .
      dockerfile: ReactApp1.Client/Dockerfile
    ports:
      - "60769:60769"
    volumes:
      - ./ReactApp1.Client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:7156
    networks:
      - app-network
    stdin_open: true
    tty: true

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge