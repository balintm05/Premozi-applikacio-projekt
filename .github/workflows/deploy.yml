name: Build and Deploy

on:
  push:
    branches: [ master ]  

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DOTNET_VERSION: '8.0.x'
      JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      env:
        JWT_TOKEN: ${{ env.JWT_TOKEN }}
        SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
        CONNECTION_STRING: ${{ env.CONNECTION_STRING }}
     
      
    - name: Publish
      run: dotnet publish --configuration Release --no-build --output publish
      env:
        JWT_TOKEN: ${{ env.JWT_TOKEN }}
        SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
        CONNECTION_STRING: ${{ env.CONNECTION_STRING }}
    
    - - name: Run and Test Backend
  run: |
    dotnet ReactApp1.Server.dll --urls "http://localhost:5082;https://localhost:7153" &
    
    sleep 10
    
    curl -k https://localhost:7153/env-check || curl http://localhost:5082/env-check
    
    pkill -f "ReactApp1.Server.dll"
  working-directory: ./publish
  env:
    ASPNETCORE_ENVIRONMENT: "Production"
    ASPNETCORE_URLS: "http://localhost:5082;https://localhost:7153"
    JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
    SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
    CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
    
    - name: Debug Environment Variables
      run: |
        echo "JWT_TOKEN is set: $([ -z "$JWT_TOKEN" ] && echo 'NO' || echo 'YES')"
        echo "SENDGRID_API_KEY is set: $([ -z "$SENDGRID_API_KEY" ] && echo 'NO' || echo 'YES')"
        echo "CONNECTION_STRING is set: $([ -z "$CONNECTION_STRING" ] && echo 'NO' || echo 'YES')"
        echo "All environment variables:"
        printenv
