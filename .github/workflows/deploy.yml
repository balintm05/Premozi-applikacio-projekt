name: Build and Deploy (Development)

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DOTNET_VERSION: '8.0.x'
      ASPNETCORE_ENVIRONMENT: "Development"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Debug --no-restore
      env:
        JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
    
    - name: Publish Development Build
      run: |
        dotnet publish --configuration Debug --no-build --output publish-dev
        mkdir -p publish-dev/wwwroot  # Create missing wwwroot directory
      env:
        JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
    
    - name: Deploy with Health Check
      run: |
        # Start application in background
        (cd publish-dev && nohup dotnet ReactApp1.Server.dll --urls "http://0.0.0.0:5082;https://0.0.0.0:7153" > server.log 2>&1 &)
        
        # Wait for startup with retries
        for i in {1..10}; do
          if curl -k https://localhost:7153/env-check; then
            echo "Application started successfully"
            break
          fi
          sleep 5
          echo "Waiting for application to start... Attempt $i/10"
        done
        if [ $? -ne 0 ]; then
          echo "Application failed to start. Logs:"
          cat publish-dev/server.log
          exit 1
        fi
      env:
        ASPNETCORE_ENVIRONMENT: "Development"
        JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}